})
edges_list <- edges_list[!sapply(edges_list, is.null)]
edges <- do.call(rbind, edges_list)
edges_df <- as.data.frame(edges, stringsAsFactors = FALSE)
colnames(edges_df) <- c("from", "to")
# 6. 汇总边频次
edge_count <- edges_df %>%
count(from, to, sort = TRUE) %>%
filter(n >= 1)  # 可调节阈值控制图复杂度
# 7. 构建图
graph <- tbl_graph(edges = edge_count, directed = FALSE)
# 8. 绘制网络图（正式简洁风）
ggraph(graph, layout = "fr") +
geom_edge_link(aes(width = n), edge_colour = "#999999", alpha = 0.6) +
geom_node_point(color = "#2F4F4F", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family = "微软雅黑", size = 5) +
theme_void() +
ggtitle("词语共现网络图") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
# ------------------ 词云生成 ------------------
generate_wordcloud <- function(text, output_file = "wordcloud.png") {
# 中文分词
cutter <- worker()
words <- segment(text, cutter)
# 去停用词和短词
stopwords <- c("项目", "主任", "我们", "需要", "方面", "通过", "包括", "的是", "在", "与", "还", "的", "中", "对",
"其", "一定", "但", "不能", "虽然", "有时", "情况", "存在", "较大", "主要", "较难", "较为",
"不同", "多为", "还是", "首先", "其次", "再者", "一定", "较", "一")
cleaned_words <- words[nchar(words) >= 2 & !(words %in% stopwords)]
# 词频统计
word_freq <- as.data.frame(table(cleaned_words), stringsAsFactors = FALSE)
word_freq <- word_freq[order(word_freq$Freq, decreasing = TRUE), ]
# 生成词云对象
wc <- wordcloud2(word_freq,
size = 0.9,
fontFamily = "微软雅黑",
color = rep("black", nrow(word_freq)),
backgroundColor = "white",
shape = "circle",
rotateRatio = 0)
# 保存为 HTML 临时文件
temp_html <- tempfile(fileext = ".html")
saveWidget(wc, temp_html, selfcontained = TRUE)
# 转换为 PNG 图片
webshot(temp_html, output_file, vwidth = 800, vheight = 600)
message("词云已保存为图片：", output_file)
}
# 示例使用
text <- "引领组织整个铁三角项目的关键人物，在各项决策中起到团队核心人物角色
项目主任在铁三角项目中的核心作用是统筹规划、资源协调，总体设计及学术专业能力的培养，教学组织与管理等。"
# 生成词云对象
wc <- wordcloud2(word_freq,
size = 0.9,
fontFamily = "微软雅黑",
color = rep("black", nrow(word_freq)),
backgroundColor = "white",
shape = "circle",
rotateRatio = 0)
# 保存为 HTML 临时文件
temp_html <- tempfile(fileext = ".html")
generate_wordcloud(text, "wordcloud_example.png")
# ------------------ 词云生成 ------------------
generate_wordcloud <- function(text, output_file = "wordcloud.png") {
# 中文分词
cutter <- worker()
words <- segment(text, cutter)
# 去停用词和短词
stopwords <- c("项目", "主任", "我们", "需要", "方面", "通过", "包括", "的是", "在", "与", "还", "的", "中", "对",
"其", "一定", "但", "不能", "虽然", "有时", "情况", "存在", "较大", "主要", "较难", "较为",
"不同", "多为", "还是", "首先", "其次", "再者", "一定", "较", "一")
cleaned_words <- words[nchar(words) >= 2 & !(words %in% stopwords)]
# 词频统计
word_freq <- as.data.frame(table(cleaned_words), stringsAsFactors = FALSE)
word_freq <- word_freq[order(word_freq$Freq, decreasing = TRUE), ]
# 生成词云对象
wc <- wordcloud2(word_freq,
size = 0.9,
fontFamily = "微软雅黑",
color = rep("black", nrow(word_freq)),
backgroundColor = "white",
shape = "circle",
rotateRatio = 0)
# 保存为 HTML 临时文件
temp_html <- tempfile(fileext = ".html")
saveWidget(wc, temp_html, selfcontained = TRUE)
# 转换为 PNG 图片
webshot(temp_html, output_file, vwidth = 800, vheight = 600)
message("词云已保存为图片：", output_file)
}
library(htmlwidgets)
library(webshot2)
generate_wordcloud(text, "wordcloud_example.png")
getwd()
setwd("./地理网络图")
# 加载所需的 R 包
library(tidyverse)
library(ggspatial)
library(sf)
library(ggnewscale)
library(showtext)  # 添加字体支持
library(hrbrthemes)
# 设置中文字体
font_add("wqy-microhei", "wqy-microhei.ttc")  # 需要安装文泉驿微米黑字体
showtext_auto()
cnfont <- "wqy-microhei"
# 读取 2020 年城市间各类型专利合作数量统计数据
haven::read_dta("2020年城市间各类型专利合作数量统计.dta") -> df
# 定义中国地图的坐标系
mycrs <- "+proj=aea +lat_0=0 +lon_0=105 +lat_1=25 +lat_2=47 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
# 读取地图数据
read_sf("chinaprov2021mini/chinaprov2021mini_line.shp") %>%
filter(!str_detect(class, "_") & !class %in% c("胡焕庸线", "秦岭-淮河线")) %>%
select(class) -> provlinemap
read_sf("chinacity2021mini/chinacity2021mini.shp") %>%
filter(!is.na(省代码)) -> citymap
# 设置中文字体
font_add("wqy-microhei", "wqy-microhei.ttc")  # 需要安装文泉驿微米黑字体
showtext_auto()
cnfont <- "wqy-microhei"
# 下载并准备地图数据
# 获取中国地图数据
china_map <- map_data("china")
# 使用系统默认中文字体
windowsFonts(
cnfont = windowsFont("Microsoft YaHei")  # 微软雅黑
)
# 下载中国地图数据
# 使用 geojsonio 包下载中国地图数据
if (!require(geojsonio)) install.packages("geojsonio")
library(geojsonio)
# 下载中国地图GeoJSON数据
china_url <- "https://raw.githubusercontent.com/south-pacific/china-geojson/master/china.json"
china_sf <- try(geojson_read(china_url, what = "sp") %>% st_as_sf())
# 如果下载失败，使用简化的边界框
if (inherits(china_sf, "try-error")) {
message("无法下载地图数据，使用简化边界框")
china_sf <- st_bbox(c(xmin = 73, xmax = 135, ymin = 18, ymax = 54)) %>%
st_as_sfc() %>%
st_sf(geometry = .)
}
# 如果下载失败，使用简化的边界框
if (inherits(china_sf, "try-error")) {
message("无法下载地图数据，使用简化边界框")
china_sf <- st_bbox(c(xmin = 73, xmax = 135, ymin = 18, ymax = 54)) %>%
st_as_sfc() %>%
st_sf(geometry = .)
}
# 创建城市中心点数据
major_cities <- tribble(
~市, ~省, ~lon, ~lat,
"北京市", "北京", 116.4074, 39.9042,
"上海市", "上海", 121.4737, 31.2304,
"广州市", "广东", 113.2644, 23.1291,
"深圳市", "广东", 114.0579, 22.5431,
"杭州市", "浙江", 120.1551, 30.2741,
"南京市", "江苏", 118.7969, 32.0603,
"武汉市", "湖北", 114.3055, 30.5928,
"成都市", "四川", 104.0665, 30.5723,
"重庆市", "重庆", 106.5516, 29.5630,
"西安市", "陕西", 108.9402, 34.3416,
"天津市", "天津", 117.1937, 39.1218,
"苏州市", "江苏", 120.5853, 31.2989,
"青岛市", "山东", 120.3826, 36.0671,
"长沙市", "湖南", 112.9388, 28.2282,
"郑州市", "河南", 113.6254, 34.7466
)
# 创建示例数据
set.seed(123)
sample_connections <- expand.grid(
from = major_cities$市,
to = major_cities$市
) %>%
filter(from != to) %>%
mutate(value = rpois(n(), lambda = 10))
# 准备数据
df <- sample_connections
# 统计每个城市与其他城市的总合作量
dfsum <- df %>%
group_by(from) %>%
summarise(value = sum(value, na.rm = TRUE))
# 准备城市坐标数据
city_centroiddf <- major_cities %>%
rename(X = lon, Y = lat)
# 准备连接数据
df <- df %>%
left_join(city_centroiddf, by = c("from" = "市")) %>%
rename(fromlon = X, fromlat = Y) %>%
left_join(city_centroiddf, by = c("to" = "市")) %>%
rename(tolon = X, tolat = Y, prov = 省.x) %>%
select(-省.y)
# 准备绘图数据
first100df <- dfsum %>%
arrange(desc(value)) %>%
head(100) %>%
left_join(city_centroiddf, by = c("from" = "市"))
first10df <- dfsum %>%
arrange(desc(value)) %>%
head(10)
# 绘图
p <- ggplot() +
geom_sf(data = china_sf, fill = NA, color = "gray30", size = 0.3) +
geom_curve(data = df,
aes(x = fromlon, y = fromlat,
xend = tolon, yend = tolat,
color = from,
size = value,
alpha = from),
curvature = 0.3) +
scale_size_continuous(range = c(0.1, 0.5),
name = "合作申请专利数量",
guide = guide_legend(direction = "horizontal",
nrow = 1,
order = 1,
byrow = TRUE)) +
scale_color_manual(values = rev(c("#fed439", "#709ae1", "#8a9197", "#d2af81",
"#fd7446", "#d5e4a2", "#197ec0", "#f05c3b",
"#46732e", "#71d0f5",
rep("gray", length(unique(df$from)) - 10))),
breaks = rev(c(first10df$from,
df %>%
anti_join(first10df) %>%
pull(from) %>%
unique()))) +
scale_alpha_manual(values = rev(c(rep(1, 10),
rep(0.2, length(unique(df$from)) - 10))),
breaks = rev(c(first10df$from,
df %>%
anti_join(first10df) %>%
pull(from) %>%
unique()))) +
guides(color = "none", alpha = "none") +
new_scale("size") +
geom_point(data = first100df,
aes(x = X, y = Y, size = value),
color = "gray10") +
scale_size_continuous(range = c(1, 7),
name = "总合作申请数量",
guide = guide_legend(direction = "horizontal",
nrow = 2,
order = 2,
byrow = TRUE)) +
geom_text_repel(data = first100df,
aes(x = X, y = Y, label = from),
color = "gray10",
min.segment.length = 0.1,
family = "cnfont",
size = 3) +
coord_sf(xlim = c(73, 135), ylim = c(18, 54)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title.position = "top",
text = element_text(family = "cnfont")) +
theme(legend.position = c(0.12, 0.2),
plot.background = element_rect(fill = "white", color = "white")) +
annotation_scale(
width_hint = 0.2,
text_family = "cnfont",
text_face = "plain",
pad_x = unit(0.3, "cm")
) +
annotation_north_arrow(
location = "tr",
which_north = "true",
width = unit(1.6, "cm"),
height = unit(2, "cm"),
style = north_arrow_fancy_orienteering(
text_family = "cnfont",
text_face = "plain"
)
) +
labs(title = "2020 年各城市合作申请专利网络",
subtitle = "数据处理&绘图：微信公众号 RStata",
caption = "数据来源：国家知识产权局")
library(ggrepel)  # 添加ggrepel包
# 使用系统默认中文字体
windowsFonts(
cnfont = windowsFont("Microsoft YaHei")  # 微软雅黑
)
# 创建示例数据
set.seed(123)
sample_connections <- expand.grid(
from = major_cities$市,
to = major_cities$市
) %>%
filter(from != to) %>%
mutate(value = rpois(n(), lambda = 10))
# 准备数据
df <- sample_connections
# 统计每个城市与其他城市的总合作量
dfsum <- df %>%
group_by(from) %>%
summarise(value = sum(value, na.rm = TRUE))
# 准备城市坐标数据
city_centroiddf <- major_cities %>%
rename(X = lon, Y = lat)
# 准备连接数据
df <- df %>%
left_join(city_centroiddf, by = c("from" = "市")) %>%
rename(fromlon = X, fromlat = Y) %>%
left_join(city_centroiddf, by = c("to" = "市")) %>%
rename(tolon = X, tolat = Y, prov = 省.x) %>%
select(-省.y)
# 准备绘图数据
first100df <- dfsum %>%
arrange(desc(value)) %>%
head(100) %>%
left_join(city_centroiddf, by = c("from" = "市"))
first10df <- dfsum %>%
arrange(desc(value)) %>%
head(10)
# 绘图
p <- ggplot() +
geom_sf(data = china_sf, fill = NA, color = "gray30", size = 0.3) +
geom_curve(data = df,
aes(x = fromlon, y = fromlat,
xend = tolon, yend = tolat,
color = from,
linewidth = value,  # 将 size 改为 linewidth
alpha = from),
curvature = 0.3) +
scale_linewidth_continuous(range = c(0.1, 0.5),  # 将 scale_size_continuous 改为 scale_linewidth_continuous
name = "合作申请专利数量",
guide = guide_legend(direction = "horizontal",
nrow = 1,
order = 1,
byrow = TRUE)) +
scale_color_manual(values = rev(c("#fed439", "#709ae1", "#8a9197", "#d2af81",
"#fd7446", "#d5e4a2", "#197ec0", "#f05c3b",
"#46732e", "#71d0f5",
rep("gray", length(unique(df$from)) - 10))),
breaks = rev(c(first10df$from,
df %>%
anti_join(first10df) %>%
pull(from) %>%
unique()))) +
scale_alpha_manual(values = rev(c(rep(1, 10),
rep(0.2, length(unique(df$from)) - 10))),
breaks = rev(c(first10df$from,
df %>%
anti_join(first10df) %>%
pull(from) %>%
unique()))) +
guides(color = "none", alpha = "none") +
new_scale("size") +
geom_point(data = first100df,
aes(x = X, y = Y, size = value),
color = "gray10") +
scale_size_continuous(range = c(1, 7),
name = "总合作申请数量",
guide = guide_legend(direction = "horizontal",
nrow = 2,
order = 2,
byrow = TRUE)) +
geom_text_repel(data = first100df,
aes(x = X, y = Y, label = from),
color = "gray10",
min.segment.length = 0.1,
family = "cnfont",
size = 3) +
coord_sf(xlim = c(73, 135), ylim = c(18, 54)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title.position = "top",
text = element_text(family = "cnfont")) +
theme(legend.position = c(0.12, 0.2),
plot.background = element_rect(fill = "white", color = "white")) +
annotation_scale(
width_hint = 0.2,
text_family = "cnfont",
text_face = "plain",
pad_x = unit(0.3, "cm")
) +
annotation_north_arrow(
location = "tr",
which_north = "true",
width = unit(1.6, "cm"),
height = unit(2, "cm"),
style = north_arrow_fancy_orienteering(
text_family = "cnfont",
text_face = "plain"
)
) +
labs(title = "2020 年各城市合作申请专利网络",
subtitle = "数据处理&绘图：微信公众号 RStata",
caption = "数据来源：国家知识产权局")
p
# 创建示例数据
set.seed(123)
sample_connections <- expand.grid(
from = major_cities$市,
to = major_cities$市
) %>%
filter(from != to) %>%
mutate(value = rpois(n(), lambda = 10))
# 准备数据
df <- sample_connections
# 统计每个城市与其他城市的总合作量
dfsum <- df %>%
group_by(from) %>%
summarise(value = sum(value, na.rm = TRUE))
# 准备城市坐标数据
city_centroiddf <- major_cities %>%
rename(X = lon, Y = lat)
# 准备连接数据
df <- df %>%
left_join(city_centroiddf, by = c("from" = "市")) %>%
rename(fromlon = X, fromlat = Y) %>%
left_join(city_centroiddf, by = c("to" = "市")) %>%
rename(tolon = X, tolat = Y, prov = 省.x) %>%
select(-省.y)
# 准备绘图数据
first100df <- dfsum %>%
arrange(desc(value)) %>%
head(100) %>%
left_join(city_centroiddf, by = c("from" = "市"))
first10df <- dfsum %>%
arrange(desc(value)) %>%
head(10)
# 绘图
p <- ggplot() +
geom_sf(data = china_sf, fill = NA, color = "gray30", size = 0.3) +
geom_curve(data = df,
aes(x = fromlon, y = fromlat,
xend = tolon, yend = tolat,
color = from,
linewidth = value,  # 将 size 改为 linewidth
alpha = from),
curvature = 0.3) +
scale_linewidth_continuous(range = c(0.1, 0.5),  # 将 scale_size_continuous 改为 scale_linewidth_continuous
name = "合作申请专利数量",
guide = guide_legend(direction = "horizontal",
nrow = 1,
order = 1,
byrow = TRUE)) +
scale_color_manual(values = rev(c("#fed439", "#709ae1", "#8a9197", "#d2af81",
"#fd7446", "#d5e4a2", "#197ec0", "#f05c3b",
"#46732e", "#71d0f5",
rep("gray", length(unique(df$from)) - 10))),
breaks = rev(c(first10df$from,
df %>%
anti_join(first10df) %>%
pull(from) %>%
unique()))) +
scale_alpha_manual(values = rev(c(rep(1, 10),
rep(0.2, length(unique(df$from)) - 10))),
breaks = rev(c(first10df$from,
df %>%
anti_join(first10df) %>%
pull(from) %>%
unique()))) +
guides(color = "none", alpha = "none") +
new_scale("size") +
geom_point(data = first100df,
aes(x = X, y = Y, size = value),
color = "gray10") +
scale_size_continuous(range = c(1, 7),
name = "总合作申请数量",
guide = guide_legend(direction = "horizontal",
nrow = 2,
order = 2,
byrow = TRUE)) +
geom_text_repel(data = first100df,
aes(x = X, y = Y, label = from),
color = "gray10",
min.segment.length = 0.1,
family = "cnfont",
size = 3) +
coord_sf(xlim = c(73, 135), ylim = c(18, 54), crs = 4326) +  # 明确指定CRS
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title.position = "top",
text = element_text(family = "cnfont"),
legend.position.inside = c(0.12, 0.2),  # 更新legend位置语法
plot.background = element_rect(fill = "white", color = "white")) +
annotation_scale(
width_hint = 0.2,
text_family = "cnfont",
text_face = "plain",
pad_x = unit(0.3, "cm")
) +
annotation_north_arrow(
location = "tr",
which_north = "true",
width = unit(1.6, "cm"),
height = unit(2, "cm"),
style = north_arrow_fancy_orienteering(
text_family = "cnfont",
text_face = "plain"
)
) +
labs(title = "2020 年各城市合作申请专利网络",
subtitle = "数据处理&绘图：微信公众号 RStata",
caption = "数据来源：国家知识产权局")
p
View(china_sf)
View(city_centroiddf)
p
